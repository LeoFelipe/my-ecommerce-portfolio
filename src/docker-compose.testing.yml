services:
  ecommerceportfolio.carts.api.test:
    image: ${DOCKER_REGISTRY-}ecommerceportfoliocartsapi
    build:
      context: .
      dockerfile: services/Carts/EcommercePortfolio.Carts.API/Dockerfile
    container_name: ecommerceportfolio-carts-api-test
    ports:
      - "6050:8080"
    networks:
      - ecommerce_test_network
    depends_on:
      - ecommerceportfolio-mongo-db-test
      - ecommerceportfolio-redis-db-test
      - ecommerceportfolio-rabbit-mq-test
    environment:
      - ASPNETCORE_ENVIRONMENT=Testing
      - ConnectionStrings__MongoDb=mongodb://mongo:mongo_password@ecommerceportfolio-mongo-db-test:27017
      - ConnectionStrings__RedisCache=redis://ecommerceportfolio-redis-db-test:6379
      - ConnectionStrings__RabbitMq=amqp://guest:guest@ecommerceportfolio-rabbit-mq-test:5672/
      - ApiSettings__FakeStoreApiUrl=https://fakestoreapi.com

  ecommerceportfolio.orders.api.test:
    image: ${DOCKER_REGISTRY-}ecommerceportfolioordersapi
    build:
      context: .
      dockerfile: services/Orders/EcommercePortfolio.Orders.API/Dockerfile
    container_name: ecommerceportfolio-orders-api-test
    ports:
      - "6150:8080"
    networks:
      - ecommerce_test_network
    depends_on:
      - ecommerceportfolio-postgres-db-test
      - ecommerceportfolio-redis-db-test
      - ecommerceportfolio-rabbit-mq-test
    environment:
      - ASPNETCORE_ENVIRONMENT=Testing
      - ConnectionStrings__PostgresDb=Host=ecommerceportfolio-postgres-db-test;Port=5432;Database=EcommercePortfolioOrderTest;Username=postgres;Password=postgres
      - ConnectionStrings__RedisCache=redis://ecommerceportfolio-redis-db-test:6379
      - ConnectionStrings__RabbitMq=amqp://guest:guest@ecommerceportfolio-rabbit-mq-test:5672/
      - ApiSettings__CartApiUrl=http://ecommerceportfolio-carts-api-test:6050
      - ApiSettings__PaymentApiUrl=https://fakestoreapi.com

  ecommerceportfolio.deliveries.api.test:
    image: ${DOCKER_REGISTRY-}ecommerceportfoliodeliveriesapi
    build:
      context: .
      dockerfile: services/Deliveries/EcommercePortfolio.Deliveries.API/Dockerfile
    container_name: ecommerceportfolio-deliveries-api-test
    ports:
      - "6250:8080"
    networks:
      - ecommerce_test_network
    depends_on:
      - ecommerceportfolio-postgres-db-test
      - ecommerceportfolio-redis-db-test
      - ecommerceportfolio-rabbit-mq-test
    environment:
      - ASPNETCORE_ENVIRONMENT=Testing
      - ConnectionStrings__PostgresDb=Host=ecommerceportfolio-postgres-db-test;Port=5432;Database=EcommercePortfolioDeliveryTest;Username=postgres;Password=postgres
      - ConnectionStrings__RedisCache=redis://ecommerceportfolio-redis-db-test:6379
      - ConnectionStrings__RabbitMq=amqp://guest:guest@ecommerceportfolio-rabbit-mq-test:5672/
      - ApiSettings__OrderApiUrl=http://ecommerceportfolio-orders-api-test:6150

  ecommerceportfolio-postgres-db-test:
    image: postgres:17.5
    restart: unless-stopped
    container_name: ecommerceportfolio-postgres-db-test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - ecommerce_test_network

  ecommerceportfolio-mongo-db-test:
    image: mongo:7.0.5
    restart: unless-stopped
    container_name: ecommerceportfolio-mongo-db-test
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo_password
    volumes:
      - mongo_test_data:/data/db
    networks:
      - ecommerce_test_network

  ecommerceportfolio-redis-db-test:
    image: redis:8.0.0
    restart: unless-stopped
    container_name: ecommerceportfolio-redis-db-test
    ports:
      - "6380:6379"
    volumes:
      - redis_test_data:/data
    networks:
      - ecommerce_test_network

  ecommerceportfolio-rabbit-mq-test:
    image: rabbitmq:4.0.9-management
    container_name: ecommerceportfolio-rabbit-mq-test
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - rabbitmq_test_data:/var/lib/rabbitmq
    networks:
      - ecommerce_test_network

volumes:
  postgres_test_data:
  mongo_test_data:
  redis_test_data:
  rabbitmq_test_data:

networks:
  ecommerce_test_network:
    name: ecommerce_test_network 