services:
  ecommerceportfolio.api:
    image: ${DOCKER_REGISTRY-}ecommerceportfolioapi
    build:
      context: .
      dockerfile: EcommercePortfolio.API/Dockerfile
    ports:
      - "5050:5050"
      - "5051:5051"
    networks:
      - ecommerce_network
    depends_on:
      - postgres
      - mongodb
      - rabbitmq
      - redis
  
  postgres:
    image: postgres:latest
    restart: always
    container_name: postgres
    environment:
      POSTGRES_DB: MyEcommercePortfolio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce_network

  mongodb:
    image: mongo:latest
    volumes:
      - mongo_data:/var/lib/mongo/data
    restart: always
    ports:
      - "27017:27017"
    environment: 
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo_password
    networks: 
      - ecommerce_network

  rabbitmq:
    image: rabbitmq:4.0.8-management-alpine
    container_name: rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia
    ports:
      - "5672:5672"
      - "15672:15672"
    networks: 
      - ecommerce_network

  redis:
    image: redis:latest
    volumes:
      - redis_data:/var/lib/redis/data
    ports:
      - 6379:6379
    networks:
      - ecommerce_network

volumes:  
  postgres_data:
  mongo_data:
  rabbitmq_data:
  redis_data:

networks:
  ecommerce_network: