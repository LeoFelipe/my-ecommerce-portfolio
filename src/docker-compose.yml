services:
  ecommerceportfolio.orders.api:
    image: ${DOCKER_REGISTRY-}ecommerceportfolioordersapi
    restart: always
    build:
      context: .
      dockerfile: services/Orders/EcommercePortfolio.Orders.API/Dockerfile
    ports:
      - "5010:5010"
      - "5011:5011"
    networks:
      - ecommerce_network
    depends_on:
      - ecommerceportfolio.postgres.db
      - ecommerceportfolio.redis.db
      - ecommerceportfolio.rabbit.mq

  ecommerceportfolio.deliveries.api:
    image: ${DOCKER_REGISTRY-}ecommerceportfoliodeliveriesapi
    restart: always
    build:
      context: .
      dockerfile: services/Deliveries/EcommercePortfolio.Deliveries.API/Dockerfile
    ports:
      - "5020:5020"
      - "5021:5021"
    networks:
      - ecommerce_network
    depends_on:
      - ecommerceportfolio.postgres.db
      - ecommerceportfolio.redis.db
      - ecommerceportfolio.rabbit.mq

  ecommerceportfolio.carts.api:
    image: ${DOCKER_REGISTRY-}ecommerceportfoliocartsapi
    restart: always
    build:
      context: .
      dockerfile: services/Carts/EcommercePortfolio.Carts.API/Dockerfile
    ports:
      - "5030:5030"
      - "5031:5031"
    networks:
      - ecommerce_network
    depends_on:
      - ecommerceportfolio.mongo.db
      - ecommerceportfolio.redis.db
      - ecommerceportfolio.rabbit.mq
  
  ecommerceportfolio.postgres.db:
    image: postgres:latest
    environment:
      POSTGRES_DB: EcommercePortfolio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ecommerce_network

  ecommerceportfolio.mongo.db:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment: 
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo_password
    volumes:
      - mongo_data:/var/lib/mongo/data
    networks: 
      - ecommerce_network

  ecommerceportfolio.redis.db:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis_data:/var/lib/redis/data
    networks:
      - ecommerce_network

  ecommerceportfolio.rabbit.mq:
    image: rabbitmq:4.0.8-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia
    networks: 
      - ecommerce_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:  
  postgres_data: {}
  mongo_data: {}
  redis_data: {}
  rabbitmq_data: {}

networks:
  ecommerce_network:
    